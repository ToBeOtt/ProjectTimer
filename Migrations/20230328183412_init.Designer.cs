// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTimer.Data;

#nullable disable

namespace ProjectTimer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230328183412_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectTimer.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SavedTime")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectTimer.Entities.SavedProjectTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<double>("SavedTime")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("SavedProjectTimes");
                });

            modelBuilder.Entity("ProjectTimer.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalTime")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ProjectTimer.Entities.SessionProject", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "SessionId");

                    b.HasIndex("SessionId");

                    b.ToTable("SessionProject");
                });

            modelBuilder.Entity("ProjectTimer.Entities.TimerClock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SessionProjectProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SessionProjectSessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SessionProjectProjectId", "SessionProjectSessionId");

                    b.ToTable("TimerClocks");
                });

            modelBuilder.Entity("ProjectTimer.Entities.SavedProjectTime", b =>
                {
                    b.HasOne("ProjectTimer.Entities.Project", "Project")
                        .WithMany("SavedProjectTime")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectTimer.Entities.SessionProject", b =>
                {
                    b.HasOne("ProjectTimer.Entities.Project", "Project")
                        .WithMany("SessionProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectTimer.Entities.Session", "Session")
                        .WithMany("SessionProject")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("ProjectTimer.Entities.TimerClock", b =>
                {
                    b.HasOne("ProjectTimer.Entities.SessionProject", "SessionProject")
                        .WithMany("TimerClock")
                        .HasForeignKey("SessionProjectProjectId", "SessionProjectSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionProject");
                });

            modelBuilder.Entity("ProjectTimer.Entities.Project", b =>
                {
                    b.Navigation("SavedProjectTime");

                    b.Navigation("SessionProject");
                });

            modelBuilder.Entity("ProjectTimer.Entities.Session", b =>
                {
                    b.Navigation("SessionProject");
                });

            modelBuilder.Entity("ProjectTimer.Entities.SessionProject", b =>
                {
                    b.Navigation("TimerClock");
                });
#pragma warning restore 612, 618
        }
    }
}
